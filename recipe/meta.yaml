{% set name = "git-annex" %}

#
# This recipe builds two variants of the git-annex conda package: the standard one, and a "nodep" (no-dependencies)
# one.  The nodep package installs the standalone version of git-annex (
# https://git-annex.branchable.com/install/Linux_standalone/ ), which has no dependencies; it can be used to install
# git-annex into conda environments that include packages which conflict with some dependencies of git-annex.  The
# standard (non-nodep) version is preferred; the nodep version should only be used in case of unresolvable dependency
# conflicts.

#
# The standalone build is currently taken from the autobuilder run by git-annex' author, as ready-made binaries.
# Better would be to build it as part of the conda-forge packaging process, but the current sources are designed to
# be built on a Debian distribution, which conda-forge does not use.
#

#
# The version number printed by the standalone (nodep) version is typically behind the version number of 
# the standard version, but in practice has the same functionality -- see discussion here:
# https://git-annex.branchable.com/forum/standalone_tarballs_for_specific_versions/#comment-d15b771fb5d23ce0c8dfb7f1c25064c5
#
{% set version = "10.20230626" %}  # [not nodep]
{% set version = "10.20230626" %}  # [nodep]
{% set version_printed = version %}  # [not nodep]
{% set version_printed = "10.20230408-g5b1e8ba77" %}  # [nodep]

{% set sha256 = "29fdc05dc072794ccbb6ed45ae1fb5d4d81c7a670be00c4e257ea450165526fc" %}  # [not nodep]
{% set sha256 = "5c322c5c5b35e5835bb94c97be143d2717de1e8fb66f7b037720f7dd1d9cc71f" %}  # [nodep]
{% set size = "54263192" %}  # [nodep]

{% set nodep = True %}  # [nodep]
{% set nodep = False %}  # [not nodep]

{% set build = 1 %}
# prioritize non-nodep variant via build number
{% if not nodep %}
{% set build = build + 100 %}
{% endif %}


package:
  name: {{ name }}
  version: {{ version }}

{% if not nodep %}
source:
  - url: https://hackage.haskell.org/package/{{ name }}-{{ version }}/{{ name }}-{{ version }}.tar.gz
    sha256: {{ sha256 }}
    folder: git_annex_main
    patches:
      - 0001-add-fdo-notify.patch

build:
  number: {{ build }}
  skip: True  # [not linux]
  string: "alldep_h{{ PKG_HASH }}_{{ build }}"  # [not nodep]
  script: ${RECIPE_DIR}/build_nodepFalse.sh
  # Tracked features also de-prioritize that build
  # https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#track-features
  # and we want to de-prioritize standalone build (it is slower etc)
  track_features:
    - standalone  # [nodep]

requirements:
  build:
    # remove more of no longer needed (not building ghc) depends
    - binutils
    - bzip2
    - coreutils
    - findutils
    - gmp
    - ghc >=8.10.7
    - libffi
    - libtool
    - libxml2
    - make
    - ncurses
    - perl
    - pkg-config
    - stack
    - xz
  host:
    - dbus
    - gmp
    - libffi
    - libiconv
    - libmagic
    - lsof
    - ncurses
    - openssh
    - rsync
    - sqlite
    - zlib
  run:
    - curl
    - git >=2.22
    - gnupg >=2.1.1
    - lsof
    - openssh
    - rsync
{% endif %}

{% if nodep %}
source:
  - url: http://archive.org/download/git-annex-builds/SHA256E-s{{ size }}--{{ sha256 }}.tar.gz
#  - url: https://downloads.kitenet.net/git-annex/autobuild/amd64/git-annex-standalone-amd64.tar.gz 
    sha256: {{ sha256 }}

build:
  number: {{ build }}
  skip: True  # [not linux]
  string: "nodep_h{{ PKG_HASH }}_{{ build }}"
  script: ${RECIPE_DIR}/build_nodepTrue.sh
  ignore_prefix_files: True
  detect_binary_files_with_prefix: False
  binary_relocation: False

requirements:
  run_constrained:
    - gnupg >=2.1.1
{% endif %}

test:
  requires:
    - gnupg >=2.1.1
  commands:
    - git-annex version | grep {{ version_printed }}
    - git-annex test
  downstreams:
    - annexremote

about:
  home: https://git-annex.branchable.com
  license: AGPL-3.0-only
  license_family: AGPL
  license_file: LICENSE
  summary: A tool for managing large files with git
  description: |
    git-annex allows managing files with git, without checking the file contents into git.
    It is useful when dealing with files larger than git can currently easily handle.
    The contents can be stored locally or in various remote repositories; git-annex tracks
    which contents is stored where.
  doc_url: https://git-annex.branchable.com
  dev_url: http://source.git-annex.branchable.com/?p=source.git;a=summary

extra:
  recipe-maintainers:
    - notestaff
    - yarikoptic
    - joeyh
